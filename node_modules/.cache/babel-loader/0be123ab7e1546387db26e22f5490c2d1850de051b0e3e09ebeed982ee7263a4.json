{"ast":null,"code":"var _jsxFileName = \"/Users/innaglamazda/Documents/Inna/Education/Front-End/canshecode/React_JS/module-13-Final project-menu_planner/menu_planner_app/src/MyMealsAndIngridients.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// SETP 19\n// Импортируем selectedDay prop\nconst MyMealsAndIngridients = (selectedDay, updatedDay) => {\n  return (\n    /*#__PURE__*/\n    // STEP 3\n    // Добавляем инупт и текст ериа\n    _jsxDEV(\"div\", {\n      className: \"whole-plan\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-editing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"myInput\",\n        placeholder: \"Today is...\"\n        // STEP 18\n        // Мы попападеам на страницу и у нас сразу отображается форма, но мы этого не хотим\n        // Мы хотим нажать на кнопку ADD и потом нажать на заметку и чтобы открылась форма\n        // И если мы нажимаем на другую заметку мы хотим чтобы открылась форма которая имеет тот же ID что и зметка\n        // Мы хоттим чтобы если мы что то печатаем в Тайтле или text erea у нас дублировалась это в заметке\n        // То есть мы будем передавать наше состояние из компонента в компонент\n        // И мы будем также менять наше состояние динамично\n        //Добавляем ID и прописываем title мы пытаемся соединиить тут ID с title in App.js\n        ,\n        id: \"title\",\n        value: selectedDay.title\n\n        // STEP 24\n        // Мы должны использлвать onChange если хотим что то менять в инпуте\n        //Будем писать (e) потому что мы знаем что у нас всегда e.target.value\n        // И у нас будет функция editMyMeal\n        // И в фунции мы скажем что меняй id title\n        // key у нас title\n        ,\n        onChange: e => editMyMeal(\"title\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write your meal plan here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"List of ingridients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = MyMealsAndIngridients;\nexport default MyMealsAndIngridients;\nvar _c;\n$RefreshReg$(_c, \"MyMealsAndIngridients\");","map":{"version":3,"names":["MyMealsAndIngridients","selectedDay","updatedDay","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","id","value","title","onChange","e","editMyMeal","target","_c","$RefreshReg$"],"sources":["/Users/innaglamazda/Documents/Inna/Education/Front-End/canshecode/React_JS/module-13-Final project-menu_planner/menu_planner_app/src/MyMealsAndIngridients.js"],"sourcesContent":["// SETP 19\n// Импортируем selectedDay prop\nconst MyMealsAndIngridients = (selectedDay, updatedDay) => {\n\n    \n    return (\n        // STEP 3\n        // Добавляем инупт и текст ериа\n        <div className=\"whole-plan\">\n            <div className=\"meal-editing\"></div>\n            <input\n                type=\"text\"\n                className=\"myInput\"\n                placeholder=\"Today is...\"\n            // STEP 18\n            // Мы попападеам на страницу и у нас сразу отображается форма, но мы этого не хотим\n            // Мы хотим нажать на кнопку ADD и потом нажать на заметку и чтобы открылась форма\n            // И если мы нажимаем на другую заметку мы хотим чтобы открылась форма которая имеет тот же ID что и зметка\n            // Мы хоттим чтобы если мы что то печатаем в Тайтле или text erea у нас дублировалась это в заметке\n            // То есть мы будем передавать наше состояние из компонента в компонент\n            // И мы будем также менять наше состояние динамично\n            //Добавляем ID и прописываем title мы пытаемся соединиить тут ID с title in App.js\n                 id=\"title\"\n                 value={selectedDay.title}\n\n            // STEP 24\n            // Мы должны использлвать onChange если хотим что то менять в инпуте\n            //Будем писать (e) потому что мы знаем что у нас всегда e.target.value\n            // И у нас будет функция editMyMeal\n            // И в фунции мы скажем что меняй id title\n            // key у нас title\n            onChange= {(e) => editMyMeal(\"title\", e.target.value)}\n                \n            />\n\n            <textarea\n                placeholder=\"Write your meal plan here\"\n            />\n\n             <textarea\n                placeholder=\"List of ingridients\"\n            />\n\n\n\n        </div>\n    )\n}\n\nexport default MyMealsAndIngridients;"],"mappings":";;AAAA;AACA;AACA,MAAMA,qBAAqB,GAAGA,CAACC,WAAW,EAAEC,UAAU,KAAK;EAGvD;IAAA;IACI;IACA;IACAC,OAAA;MAAKC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBF,OAAA;QAAKC,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpCN,OAAA;QACIO,IAAI,EAAC,MAAM;QACXN,SAAS,EAAC,SAAS;QACnBO,WAAW,EAAC;QAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAAA;QACKC,EAAE,EAAC,OAAO;QACVC,KAAK,EAAEZ,WAAW,CAACa;;QAExB;QACA;QACA;QACA;QACA;QACA;QAAA;QACAC,QAAQ,EAAIC,CAAC,IAAKC,UAAU,CAAC,OAAO,EAAED,CAAC,CAACE,MAAM,CAACL,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErD,CAAC,eAEFN,OAAA;QACIQ,WAAW,EAAC;MAA2B;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eAEDN,OAAA;QACGQ,WAAW,EAAC;MAAqB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAID;EAAC;AAEd,CAAC;AAAAU,EAAA,GA7CKnB,qBAAqB;AA+C3B,eAAeA,qBAAqB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}