{"ast":null,"code":"var _jsxFileName = \"/Users/innaglamazda/Documents/Inna/Education/Front-End/canshecode/React_JS/module-13-Final project-menu_planner/menu_planner_app/src/MyList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// STEP 10\n// Добавляем новый проп mealPlan\nconst MyList = ({\n  mealPlans,\n  addMeal\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weakly Meal Plan Ideas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-add\",\n        onClick: addMeal,\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-delete\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), \"STEP 11 \\u041F\\u0440\\u043E\\u043F\\u0438\\u0441\\u044B\\u0432\\u0430\\u0435\\u043C mealPlans(\\u043D\\u0430\\u0448\\u0435 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435) \\u0442\\u043E \\u0447\\u0442\\u043E \\u043C\\u044B \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0447\\u0442\\u043E \\u0441 \\u0432\\u0430\\u043C\\u0438 \\u0438\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438 \\u0418 \\u043C\\u044B \\u043F\\u0438\\u0448\\u0435\\u043C map \\u0438 \\u0434\\u0430\\u043B\\u044C\\u0448\\u0435 \\u0432\\u043D\\u0443\\u0442\\u0440\\u0438 \\u043C\\u044B \\u043F\\u0438\\u0448\\u0435\\u043C \\u0447\\u0442\\u043E \\u043C \\u044B\\u0445\\u043E\\u0442\\u0438\\u043C \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043D\\u0430 \\u043D\\u0430\\u0448\\u0435\\u0439 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435 \\u0412 \\u043D\\u0430\\u0448\\u0435\\u043C \\u0441\\u043B\\u0443\\u0447\\u0430\\u0435 \\u044D\\u0442\\u043E title \\u043F\\u043E\\u0442\\u043E\\u043C\\u0443 \\u0447\\u0442\\u043E \\u043C\\u044B \\u0443\\u0436\\u0435 \\u0435\\u0433\\u043E \\u043F\\u0440\\u043E\\u043F\\u0438\\u0441\\u0430\\u043B\\u0438 \\u0432 \\u043D\\u0430\\u0448\\u0435\\u043C \\u043E\\u0431\\u044C\\u0435\\u043A\\u0442\\u0435 \\u0432 \\u043E\\u0441\\u043D\\u043E\\u0432\\u043D\\u043E\\u043C \\u043A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442\\u0435\", mealPlans.map(tie), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 13\n  }, this);\n};\n_c = MyList;\nexport default MyList;\nvar _c;\n$RefreshReg$(_c, \"MyList\");","map":{"version":3,"names":["MyList","mealPlans","addMeal","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","tie","_c","$RefreshReg$"],"sources":["/Users/innaglamazda/Documents/Inna/Education/Front-End/canshecode/React_JS/module-13-Final project-menu_planner/menu_planner_app/src/MyList.js"],"sourcesContent":["\n// STEP 10\n// Добавляем новый проп mealPlan\nconst MyList = ({mealPlans, addMeal}) => {\n    return (<div>\n        {/* STEP 2\n        Работаем с эттм компонентом */}\n        <div>\n            <h1>Weakly Meal Plan Ideas</h1>\n\n            {/* STEP 4\n            Теперь нам нужно чтопы кнопка заработаала (зотябы увидеть в консоле что она нажата)\n            У нас подительский компонент App.js\n            Кнопка живет в ребенке добавляем onClick и назовем ее addMeal\n            И мы не будем прописывать addMeal здесь а пропишем у родителя и ьудем использовать прописывать\n            Это не обязательно но когда небольгое придожение ничего плохого в этом нет\n            Переходим в основной компонент и добавляем там prop */}\n            <button className=\"button-add\" onClick={addMeal}>ADD</button>\n            <button className=\"button-delete\">Delete</button>\n        </div>\n\n        STEP 11\n        Прописываем mealPlans(наше состояние) то что мы только что с вами импортировали\n        И мы пишем map и дальше внутри мы пишем что м ыхотим показать на нашей странице\n        В нашем случае это title потому что мы уже его прописали в нашем обьекте в основном компоненте\n        {mealPlans.map((tie))}\n        <div>\n\n        </div>\n    </div>\n    )\n}\n\nexport default MyList;"],"mappings":";;AACA;AACA;AACA,MAAMA,MAAM,GAAGA,CAAC;EAACC,SAAS;EAAEC;AAAO,CAAC,KAAK;EACrC,oBAAQC,OAAA;IAAAC,QAAA,gBAGJD,OAAA;MAAAC,QAAA,gBACID,OAAA;QAAAC,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAS/BL,OAAA;QAAQM,SAAS,EAAC,YAAY;QAACC,OAAO,EAAER,OAAQ;QAAAE,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7DL,OAAA;QAAQM,SAAS,EAAC,eAAe;QAAAL,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,0sCAMN,EAACP,SAAS,CAACU,GAAG,CAAEC,GAAI,CAAC,eACrBT,OAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAK,EAAA,GA5BKb,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}