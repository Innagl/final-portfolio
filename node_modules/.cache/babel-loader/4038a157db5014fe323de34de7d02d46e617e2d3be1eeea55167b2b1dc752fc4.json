{"ast":null,"code":"var _jsxFileName = \"/Users/innaglamazda/Documents/Inna/Education/Front-End/canshecode/React_JS/books_app/src/Accordion/AccordionItem.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n//STEP 2\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AccordionItem = ({\n  image,\n  author,\n  content\n}) => {\n  _s();\n  // Нам нужно сказать что у нас будет состояние\n  // const [isOpen, setIsOpen] = useState(false)\n  // прировняем к  то есть когда открываем страницу то у нас аккордион закрыт\n  const [isOpen, setIsOpen] = useState(false);\n\n  // логика будет немного как тогл\n  //Тут про логику https://htmlacademy.ru/courses/343/run/10 \n  const handleIsopen = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: isOpen ? 'active' : 'default',\n      onClick: handleIsopen,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: author // accessibility text\n        ,\n        style: {\n          width: \"50px\",\n          height: \"50px\",\n          marginRight: \"10px\",\n          objectFit: \"cover\",\n          borderRadius: \"4px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(AccordionItem, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = AccordionItem;\nvar _c;\n$RefreshReg$(_c, \"AccordionItem\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AccordionItem","image","author","content","_s","isOpen","setIsOpen","handleIsopen","children","className","onClick","src","alt","style","width","height","marginRight","objectFit","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/innaglamazda/Documents/Inna/Education/Front-End/canshecode/React_JS/books_app/src/Accordion/AccordionItem.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\n\r\n//STEP 2\r\nexport const AccordionItem = ({image, author, content}) => {\r\n\r\n    // Нам нужно сказать что у нас будет состояние\r\n    // const [isOpen, setIsOpen] = useState(false)\r\n    // прировняем к  то есть когда открываем страницу то у нас аккордион закрыт\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    // логика будет немного как тогл\r\n    //Тут про логику https://htmlacademy.ru/courses/343/run/10 \r\n    const handleIsopen = () => {\r\n     setIsOpen(!isOpen)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* Теперь присваиваем класнейм который будет меняться динамично поэтому ставим фигурные скобки\r\n            если isOpen тогда у нас active если нет тогда у нас дефолт */}\r\n            <div className={isOpen? 'active' : 'default'} onClick={handleIsopen}>\r\n                  <img\r\n          src={image}\r\n          alt={author} // accessibility text\r\n          style={{\r\n            width: \"50px\",\r\n            height: \"50px\",\r\n            marginRight: \"10px\",\r\n            objectFit: \"cover\",\r\n            borderRadius: \"4px\"\r\n          }}\r\n        />\r\n        <div>{author}</div>\r\n            </div>\r\n\r\n            {/* //тут прописываем логику если isOpen тогда <div></div> открывается и пишем {content} */}\r\n            {\r\n            isOpen && <div className=\"content\">\r\n                {content}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAGhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAACC,KAAK;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAEvD;EACA;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA;EACA,MAAMU,YAAY,GAAGA,CAAA,KAAM;IAC1BD,SAAS,CAAC,CAACD,MAAM,CAAC;EACnB,CAAC;EAGD,oBACIN,OAAA;IAAAS,QAAA,gBAGIT,OAAA;MAAKU,SAAS,EAAEJ,MAAM,GAAE,QAAQ,GAAG,SAAU;MAACK,OAAO,EAAEH,YAAa;MAAAC,QAAA,gBAC9DT,OAAA;QACRY,GAAG,EAAEV,KAAM;QACXW,GAAG,EAAEV,MAAO,CAAC;QAAA;QACbW,KAAK,EAAE;UACLC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,WAAW,EAAE,MAAM;UACnBC,SAAS,EAAE,OAAO;UAClBC,YAAY,EAAE;QAChB;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFvB,OAAA;QAAAS,QAAA,EAAMN;MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,EAINjB,MAAM,iBAAIN,OAAA;MAAKU,SAAS,EAAC,SAAS;MAAAD,QAAA,EAC7BL;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAAlB,EAAA,CAzCYJ,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}