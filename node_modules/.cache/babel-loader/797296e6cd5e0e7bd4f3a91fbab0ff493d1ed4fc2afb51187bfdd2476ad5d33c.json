{"ast":null,"code":"var _jsxFileName = \"/Users/innaglamazda/Documents/Inna/Education/Front-End/canshecode/React_JS/module-13-Final project-menu_planner/menu_planner_app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport './App.css';\nimport MyList from './MyList';\nimport MyMealsAndIngridients from './MyMealsAndIngridients';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // STEP 7 \n  //  Нам нужно прописать состояние и прированием его к useState это у нас будет массив\n  const [mealPlans, setMealPlans] = useState([]);\n\n  // STEP 16\n  // Мы должны сделать ращницу между заметкой на котору мы нажали и при этом открывалась под нее форма\n  // которую мы можем редактировать\n  // Нам нужно новое состояние и приравниваем это к useState(false)\n  //Потому что мы хотим чтобы наша заметка изначально не была выбрана\n  const [selectedDay, setSelectedDay] = useState(false);\n\n  // STEP 6\n  // Задефайним addMeal\n  //И потом передаь этот пропс ребенку MyList\n\n  const addMeal = () => {\n    // STEP 8 \n    // Создаем обьект newMeal потому что у нас у каждой заметки по меню будут определенны характеристики\n    // например: title and etc.\n    const newMeal = {\n      title: \"Monday\",\n      //STEP 12\n      // Нам нужно удалять каждый день из списка не все сразу,  идля этого нам нужно знать ID\n      // Но мы не можем прописывать ID (1, 2, 3, 4) \n      //Но у нас у каждого эдемента будет свой айди\n      // поэтому часто используют библиотеку uuid https://www.npmjs.com/package/uuid\n      // для установки: npm i uuid\n      // функция: uuid();\n      // импортировать:import { v4 as uuid } from 'uuid';\n      //Для этого мы будем просто писать id: uuid() то есть вызывать эту функцию\n      id: uuid(),\n      mealForADay: \"\"\n    };\n\n    // STEP 9\n    // Мы должны передать этот обьект в новый компонент\n    // Но прежде чем передать вновый компонент мы должны прописать логику поменять состояние\n    // Что как только у нас будет нажата кнопка ADD мы меняем состояние\n    // Берем setMealPlans, создаем новый массив это юудет у нас newMeal\n    // Мы говорим добавь нам сюда нашу новую заметку и также покажи мне не убирай со страницы а добавь в общий массив все остальное\n    // Для этого испольщуем опиратор расширения\n    //Нам нужно чтобы при нажатии мы видели что мы добавили видели текст\n    //Нам нужно всю эту логику передать в компонент MyList\n    setMealPlans([newMeal, ...mealPlans]);\n    console.log(newMeal);\n  };\n\n  // STEP 14\n  // Прописываем функцию\n  // Указываем параметр mealID\n  const deleteDay = mealId => {\n    //   Мы говорим что мы хотим поменять наше состояние через setMealPlans и использунм filter() method\n    //   Мы используем ID чтобы сравнивать ID с тем ID на который мы нажали и если он не одинаковый \n    //   ID удаляется то есть не попападает в новый массив который был создан через filter\n    setMealPlans(mealPlans.filter(({\n      id\n    }) => id !== mealId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyList, {\n      mealPlans: mealPlans,\n      addMeal: addMeal,\n      deleteDay: deleteDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyMealsAndIngridients, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wxgYStoSrv3JXXUUiluW0hWln8s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","v4","uuid","MyList","MyMealsAndIngridients","jsxDEV","_jsxDEV","App","_s","mealPlans","setMealPlans","selectedDay","setSelectedDay","addMeal","newMeal","title","id","mealForADay","console","log","deleteDay","mealId","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/innaglamazda/Documents/Inna/Education/Front-End/canshecode/React_JS/module-13-Final project-menu_planner/menu_planner_app/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport './App.css';\nimport MyList from './MyList';\nimport MyMealsAndIngridients from './MyMealsAndIngridients';\n\nfunction App() {\n\n  // STEP 7 \n  //  Нам нужно прописать состояние и прированием его к useState это у нас будет массив\n  const [mealPlans, setMealPlans] = useState([])\n\n  // STEP 16\n  // Мы должны сделать ращницу между заметкой на котору мы нажали и при этом открывалась под нее форма\n  // которую мы можем редактировать\n  // Нам нужно новое состояние и приравниваем это к useState(false)\n  //Потому что мы хотим чтобы наша заметка изначально не была выбрана\n  const [selectedDay, setSelectedDay] = useState(false)\n\n  // STEP 6\n  // Задефайним addMeal\n  //И потом передаь этот пропс ребенку MyList\n\n  const addMeal = () => {\n    // STEP 8 \n    // Создаем обьект newMeal потому что у нас у каждой заметки по меню будут определенны характеристики\n    // например: title and etc.\n    const newMeal = {\n      title: \"Monday\",\n\n      //STEP 12\n      // Нам нужно удалять каждый день из списка не все сразу,  идля этого нам нужно знать ID\n      // Но мы не можем прописывать ID (1, 2, 3, 4) \n      //Но у нас у каждого эдемента будет свой айди\n      // поэтому часто используют библиотеку uuid https://www.npmjs.com/package/uuid\n      // для установки: npm i uuid\n     // функция: uuid();\n     // импортировать:import { v4 as uuid } from 'uuid';\n     //Для этого мы будем просто писать id: uuid() то есть вызывать эту функцию\n     id: uuid(),\n     mealForADay: \"\"\n    }\n\n    // STEP 9\n    // Мы должны передать этот обьект в новый компонент\n    // Но прежде чем передать вновый компонент мы должны прописать логику поменять состояние\n    // Что как только у нас будет нажата кнопка ADD мы меняем состояние\n    // Берем setMealPlans, создаем новый массив это юудет у нас newMeal\n    // Мы говорим добавь нам сюда нашу новую заметку и также покажи мне не убирай со страницы а добавь в общий массив все остальное\n    // Для этого испольщуем опиратор расширения\n    //Нам нужно чтобы при нажатии мы видели что мы добавили видели текст\n    //Нам нужно всю эту логику передать в компонент MyList\n    setMealPlans([newMeal, ...mealPlans])\n    console.log(newMeal)\n  }\n\n    // STEP 14\n    // Прописываем функцию\n    // Указываем параметр mealID\n    const deleteDay = (mealId) => {\n    //   Мы говорим что мы хотим поменять наше состояние через setMealPlans и использунм filter() method\n    //   Мы используем ID чтобы сравнивать ID с тем ID на который мы нажали и если он не одинаковый \n    //   ID удаляется то есть не попападает в новый массив который был создан через filter\n      setMealPlans(mealPlans.filter(({id}) => id !== mealId))\n    }\n\n  return (\n\n    <div>\n      {/* STEP 1\n    Создаем 2 компонента\n    MyList\n    MyMealsAndIngridients */}\n\n      {/* STEP 5\n      Добавляем prop addMeal to MyList */}\n      \n\n      \n      {/* STEP 15\n      Передаем функцию deleteDay через props в MyList */}\n\n      {/* STEP 10\n      Добавляем новый prop и приравниваем его к mealPlans\n      и таким образом передаем его в новый компонент но мы хотим его не только передать но и туда что то добавлять\n      И менять состояние благодаря фцнкции setMealPlans которую мы прописали выше\n       */}\n      <MyList \n      mealPlans={mealPlans}\n      addMeal={addMeal}\n      deleteDay={deleteDay}\n      />\n      <MyMealsAndIngridients />\n    </div>\n  )\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,qBAAqB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA;EACA;EACA;EACA;EACA,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA;EACA;;EAEA,MAAMa,OAAO,GAAGA,CAAA,KAAM;IACpB;IACA;IACA;IACA,MAAMC,OAAO,GAAG;MACdC,KAAK,EAAE,QAAQ;MAEf;MACA;MACA;MACA;MACA;MACA;MACD;MACA;MACA;MACAC,EAAE,EAAEd,IAAI,CAAC,CAAC;MACVe,WAAW,EAAE;IACd,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAP,YAAY,CAAC,CAACI,OAAO,EAAE,GAAGL,SAAS,CAAC,CAAC;IACrCS,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;EACtB,CAAC;;EAEC;EACA;EACA;EACA,MAAMM,SAAS,GAAIC,MAAM,IAAK;IAC9B;IACA;IACA;IACEX,YAAY,CAACD,SAAS,CAACa,MAAM,CAAC,CAAC;MAACN;IAAE,CAAC,KAAKA,EAAE,KAAKK,MAAM,CAAC,CAAC;EACzD,CAAC;EAEH,oBAEEf,OAAA;IAAAiB,QAAA,gBAmBEjB,OAAA,CAACH,MAAM;MACPM,SAAS,EAAEA,SAAU;MACrBI,OAAO,EAAEA,OAAQ;MACjBO,SAAS,EAAEA;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFrB,OAAA,CAACF,qBAAqB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAACnB,EAAA,CAzFQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA2FZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}